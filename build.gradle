buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'

    }
}


allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'java'



}

subprojects {
    apply plugin: "java-library"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.12


    repositories {
        mavenCentral()
    }

    jar {
        enabled = true
    }

    bootJar {
        enabled = false
    }

    configurations {
        testArtifacts
    }
    task testJar(type: Jar) {
        archiveBaseName = "${project.name}-test"
        from sourceSets.test.output
    }
    artifacts {
        testArtifacts testJar
    }

    dependencyManagement {
        dependencies {

            dependency "com.google.zxing:core:3.3.3"
            dependency "com.google.zxing:javase:3.3.3"
            dependency "org.apache.pdfbox:pdfbox:2.0.10"
            dependency "com.itextpdf:itextpdf:5.5.13"

            dependency "com.opencsv:opencsv:4.2"

            dependency "commons-io:commons-io:2.5"

            dependencySet(group: "io.cucumber", version: "$cucumberVersion") {
                entry "cucumber-junit"
                entry "cucumber-core"
                entry "cucumber-java"
                entry "cucumber-spring"
            }
            dependency "de.monochromata.cucumber:reporting-plugin:4.0.25"

            dependencySet(group: "fr.opensagres.xdocreport", version: "2.0.2") {
                entry "fr.opensagres.xdocreport.core"
                entry "fr.opensagres.xdocreport.template"
                entry "fr.opensagres.xdocreport.document"
                entry "fr.opensagres.xdocreport.document.docx"
                entry "fr.opensagres.xdocreport.document.pptx"
                entry "fr.opensagres.xdocreport.document.odt"
                entry "fr.opensagres.xdocreport.template.velocity"
                entry "fr.opensagres.xdocreport.converter"
                entry "fr.opensagres.xdocreport.converter.docx.xwpf"
                entry "fr.opensagres.xdocreport.converter.odt.odfdom"
            }
            dependency "fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.pdf:1.0.6"
        }
    }

    dependencies {

        compile "org.apache.commons:commons-lang3"
        compile "commons-io:commons-io:2.5"
        testCompile 'org.springframework.boot:spring-boot-starter-test'

        compileOnly "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        testImplementation "io.cucumber:cucumber-junit"
        testImplementation "io.cucumber:cucumber-core"
        testImplementation "io.cucumber:cucumber-java"
        testImplementation "io.cucumber:cucumber-spring"
        testImplementation 'de.monochromata.cucumber:reporting-plugin'


    }



    jacoco {
        toolVersion = '0.8.5'
    }



    task generateMergedReport(type: JacocoReport) {
        dependsOn = subprojects.test
        additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
        sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
        classDirectories.setFrom files(subprojects.sourceSets.main.output)
        executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
        reports {
            xml.enabled false
            csv.enabled false
            html.enabled true
        }
    }

}

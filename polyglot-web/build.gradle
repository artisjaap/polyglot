apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    archiveBaseName = 'polyglot-web'
    archiveVersion = '0.0.1-SNAPSHOT'

}


dependencies {

    implementation project(':polyglot-core')
    implementation project(':artisjaap-migrate')
    implementation project(':artisjaap-document-web')
    implementation project(':artisjaap-backup-web')
    implementation project(':artisjaap-i18n')
    implementation project(':artisjaap-i18n-web')
    implementation project(':artisjaap-mail-web')
    implementation project(':artisjaap-properties-web')
    implementation project(':artisjaap-schedule')
    implementation project(':artisjaap-schedule-web')
    implementation project(':artisjaap-document')
    implementation project(':artisjaap-backup')
    implementation project(':artisjaap-mail')
    implementation project(':polyglot-web-front')



    compile project(':artisjaap-angular-generator')

    testCompile project(path: ":polyglot-test-helper", configuration: 'testArtifacts')
    testCompile group: 'io.codearte.jfairy', name: 'jfairy', version: '0.5.9'


    compile('org.springframework.boot:spring-boot-starter-security')

    //jolokia
    compile('org.jolokia:jolokia-core')

    //jwt
    compile('io.jsonwebtoken:jjwt:0.9.1')
    compile group: 'javax.xml', name: 'jaxb-api', version: '2.1'


    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile('org.springframework.security:spring-security-test')

}


bootJar {
    launchScript()
    archiveBaseName = 'polyglot-server'
    archiveClassifier = "bootable-${project.environmentToBuild}"
    enabled = true
}


springBoot {
    mainClassName = 'be.artisjaap.polyglot.web.PolyglotWebApplication'
}

bootRun {
    println "Using target environment as spring.profile: ${project.environmentToBuild}"
    args = ["--spring.profiles.active=${project.environmentToBuild}"]
}

